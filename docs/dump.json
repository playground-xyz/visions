[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "lib/PreparedQuery.js",
    "content": "const constructQuery = require('./constructQuery');\nconst doJoins = require('./doJoins');\n\n/**\n * Class that presents a simple interface for constructing queries for a\n * relational database using a model map object describing the connections\n * between models.\n *\n * All methods except `exec` are chainable.\n *\n */\nclass PreparedQuery {\n\n  /**\n   * Generally, this shouldn't be called by external code. This object is generated by the main\n   * interface when the `selectModel` method is used.\n   *\n   * @param {String} modelId - The `primary` model to query\n   * @param {JoinJsMap} models - The complete schema of the database (after internal processing)\n   * @param {KnexInstance} knex - A knex instance\n   */\n  constructor(modelId, models, knex) {\n\n    // This is safe as the models object is serialisable\n    this.models = JSON.parse(JSON.stringify((models)));\n\n    this.knex = knex;\n    this.modelId = modelId;\n    this.populated = [];\n    this.whereClauses = [];\n\n    this.originalModel = this.models.find(model => model.mapId === modelId);\n    if (!this.originalModel) {\n      throw new Error(`Invalid model ID ${modelId}`);\n    }\n\n    return this;\n  }\n\n  /**\n   * Populate the joins for a collection or association of the primary model of the query.\n   *\n   * @param {String} name - The name property of the association or collection\n   */\n  populate(name) {\n    this.populated.push(name);\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Define the number of elements to skip (useful for pagination).\n   *\n   * @param {Number} value - The number of elements to skip\n   */\n  skip(value) {\n    this._skip = value;\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Define the maximum number of elements to return (useful for pagination).\n   *\n   * @param {Number} value - The maximum number of elements to return\n   */\n  limit(value) {\n    this._limit = value;\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Define a restriction on the result set.\n   *\n   * @param {Object|Array} clauses - An object (or list of objects) specifying the\n   *     predicate that all results must satisfy. Multiple calls to this function\n   *     on a single prepared query instance will be appended to the list of clauses\n   *     that are combined using boolean AND logic (ie. results must satisfy all\n   *     predicates in the list)\n   *\n   *     Each predicate consists of a `key` (the column name) and a `value` or `values`\n   *     list. If a list of values is specifed it is interpreted as a WhereIn operation\n   *     such that results can match ANY of the values supplied.\n   */\n  where(clauses) {\n    if (!clauses || clauses.length === 0) {\n      return this;\n    }\n\n    // Allow a single where clause to be passed in\n    if (!Array.isArray(clauses)) {\n      clauses = [clauses];\n    }\n\n    // Validate the input structure\n    clauses.forEach(clause => {\n      if (!clause.key) {\n        throw new Error(`Where clause missing key: ${clause}`);\n      }\n      if ((clause.value === undefined) && !Array.isArray(clause.values)) {\n        throw new Error(`Where clause missing a value or values (array): ${clause}`);\n      }\n      if (clause.value !== undefined && Array.isArray(clause.values)) {\n        throw new Error(\n            'Each predicate in a where clause must specify a value OR a list of values');\n      }\n    });\n\n    this.whereClauses = this.whereClauses.concat(clauses);\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Define the ordering of the results\n   *\n   * @param {String} attr - The column name to sort based on\n   * @param {String} dir - The direction of the sorting. Must be `asc` or `desc`.\n   */\n  sort(attr, dir) {\n    this.sortAttr = attr;\n    this.sortDir = dir;\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Run the query and construct a nested JS object representation of it.\n   *\n   * @returns {Promise} - A promise that resolves to the result of the query\n   */\n  exec() {\n\n    // Note that we don't want to modify the original model\n    const modifiedModel = {\n      mapId: this.originalModel.mapId,\n      viewId: this.originalModel.viewId,\n      idProperty: this.originalModel.idProperty,\n      properties: this.originalModel.properties,\n\n      // Add a flag to determine which connections will need populating\n      associations: this.originalModel.associations.map(assoc => {\n        assoc.populate = !!this.populated.find(name => name === assoc.name);\n        return assoc;\n      }),\n      collections: this.originalModel.collections.map(coll => {\n        coll.populate = !!this.populated.find(name => name === coll.name);\n        return coll;\n      })\n    };\n\n    // Construct the query, run it and convert it to a nested object\n    return constructQuery(\n        this.models,\n        modifiedModel,\n        this.knex,\n        this.whereClauses,\n        this.sortAttr,\n        this.sortDir,\n        this._limit,\n        this._skip\n    ).then(data => doJoins(\n        data,\n        this.models,\n        this.originalModel,\n        modifiedModel\n    ));\n  }\n}\n\nmodule.exports = PreparedQuery;\n",
    "static": true,
    "longname": "lib/PreparedQuery.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "variable",
    "name": "constructQuery",
    "memberof": "lib/PreparedQuery.js",
    "static": true,
    "longname": "lib/PreparedQuery.js~constructQuery",
    "access": null,
    "export": false,
    "importPath": "visions/lib/PreparedQuery.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2,
    "kind": "variable",
    "name": "doJoins",
    "memberof": "lib/PreparedQuery.js",
    "static": true,
    "longname": "lib/PreparedQuery.js~doJoins",
    "access": null,
    "export": false,
    "importPath": "visions/lib/PreparedQuery.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3,
    "kind": "class",
    "name": "PreparedQuery",
    "memberof": "lib/PreparedQuery.js",
    "static": true,
    "longname": "lib/PreparedQuery.js~PreparedQuery",
    "access": null,
    "export": false,
    "importPath": "visions/lib/PreparedQuery.js",
    "importStyle": null,
    "description": "Class that presents a simple interface for constructing queries for a\nrelational database using a model map object describing the connections\nbetween models.\n\nAll methods except `exec` are chainable.",
    "lineNumber": 12,
    "interface": false
  },
  {
    "__docId__": 4,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/PreparedQuery.js~PreparedQuery",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/PreparedQuery.js~PreparedQuery#constructor",
    "access": null,
    "description": "Generally, this shouldn't be called by external code. This object is generated by the main\ninterface when the `selectModel` method is used.",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "modelId",
        "description": "The `primary` model to query"
      },
      {
        "nullable": null,
        "types": [
          "JoinJsMap"
        ],
        "spread": false,
        "optional": false,
        "name": "models",
        "description": "The complete schema of the database (after internal processing)"
      },
      {
        "nullable": null,
        "types": [
          "KnexInstance"
        ],
        "spread": false,
        "optional": false,
        "name": "knex",
        "description": "A knex instance"
      }
    ]
  },
  {
    "__docId__": 5,
    "kind": "member",
    "name": "models",
    "memberof": "lib/PreparedQuery.js~PreparedQuery",
    "static": false,
    "longname": "lib/PreparedQuery.js~PreparedQuery#models",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 6,
    "kind": "member",
    "name": "knex",
    "memberof": "lib/PreparedQuery.js~PreparedQuery",
    "static": false,
    "longname": "lib/PreparedQuery.js~PreparedQuery#knex",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 7,
    "kind": "member",
    "name": "modelId",
    "memberof": "lib/PreparedQuery.js~PreparedQuery",
    "static": false,
    "longname": "lib/PreparedQuery.js~PreparedQuery#modelId",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 8,
    "kind": "member",
    "name": "populated",
    "memberof": "lib/PreparedQuery.js~PreparedQuery",
    "static": false,
    "longname": "lib/PreparedQuery.js~PreparedQuery#populated",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 9,
    "kind": "member",
    "name": "whereClauses",
    "memberof": "lib/PreparedQuery.js~PreparedQuery",
    "static": false,
    "longname": "lib/PreparedQuery.js~PreparedQuery#whereClauses",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 10,
    "kind": "member",
    "name": "originalModel",
    "memberof": "lib/PreparedQuery.js~PreparedQuery",
    "static": false,
    "longname": "lib/PreparedQuery.js~PreparedQuery#originalModel",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 11,
    "kind": "method",
    "name": "populate",
    "memberof": "lib/PreparedQuery.js~PreparedQuery",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/PreparedQuery.js~PreparedQuery#populate",
    "access": null,
    "description": "Populate the joins for a collection or association of the primary model of the query.",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The name property of the association or collection"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12,
    "kind": "method",
    "name": "skip",
    "memberof": "lib/PreparedQuery.js~PreparedQuery",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/PreparedQuery.js~PreparedQuery#skip",
    "access": null,
    "description": "Define the number of elements to skip (useful for pagination).",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The number of elements to skip"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 13,
    "kind": "member",
    "name": "_skip",
    "memberof": "lib/PreparedQuery.js~PreparedQuery",
    "static": false,
    "longname": "lib/PreparedQuery.js~PreparedQuery#_skip",
    "access": null,
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 14,
    "kind": "method",
    "name": "limit",
    "memberof": "lib/PreparedQuery.js~PreparedQuery",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/PreparedQuery.js~PreparedQuery#limit",
    "access": null,
    "description": "Define the maximum number of elements to return (useful for pagination).",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The maximum number of elements to return"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 15,
    "kind": "member",
    "name": "_limit",
    "memberof": "lib/PreparedQuery.js~PreparedQuery",
    "static": false,
    "longname": "lib/PreparedQuery.js~PreparedQuery#_limit",
    "access": null,
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 16,
    "kind": "method",
    "name": "where",
    "memberof": "lib/PreparedQuery.js~PreparedQuery",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/PreparedQuery.js~PreparedQuery#where",
    "access": null,
    "description": "Define a restriction on the result set.",
    "lineNumber": 88,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "clauses",
        "description": "An object (or list of objects) specifying the\n    predicate that all results must satisfy. Multiple calls to this function\n    on a single prepared query instance will be appended to the list of clauses\n    that are combined using boolean AND logic (ie. results must satisfy all\n    predicates in the list)\n\n    Each predicate consists of a `key` (the column name) and a `value` or `values`\n    list. If a list of values is specifed it is interpreted as a WhereIn operation\n    such that results can match ANY of the values supplied."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 17,
    "kind": "member",
    "name": "whereClauses",
    "memberof": "lib/PreparedQuery.js~PreparedQuery",
    "static": false,
    "longname": "lib/PreparedQuery.js~PreparedQuery#whereClauses",
    "access": null,
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 18,
    "kind": "method",
    "name": "sort",
    "memberof": "lib/PreparedQuery.js~PreparedQuery",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/PreparedQuery.js~PreparedQuery#sort",
    "access": null,
    "description": "Define the ordering of the results",
    "lineNumber": 124,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "attr",
        "description": "The column name to sort based on"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dir",
        "description": "The direction of the sorting. Must be `asc` or `desc`."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 19,
    "kind": "member",
    "name": "sortAttr",
    "memberof": "lib/PreparedQuery.js~PreparedQuery",
    "static": false,
    "longname": "lib/PreparedQuery.js~PreparedQuery#sortAttr",
    "access": null,
    "description": null,
    "lineNumber": 125,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 20,
    "kind": "member",
    "name": "sortDir",
    "memberof": "lib/PreparedQuery.js~PreparedQuery",
    "static": false,
    "longname": "lib/PreparedQuery.js~PreparedQuery#sortDir",
    "access": null,
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 21,
    "kind": "method",
    "name": "exec",
    "memberof": "lib/PreparedQuery.js~PreparedQuery",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/PreparedQuery.js~PreparedQuery#exec",
    "access": null,
    "description": "Run the query and construct a nested JS object representation of it.",
    "lineNumber": 137,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - A promise that resolves to the result of the query"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "A promise that resolves to the result of the query"
    }
  },
  {
    "__docId__": 22,
    "kind": "file",
    "name": "lib/constructQuery.js",
    "content": "const helpers = require('./helpers');\n\n/**\n * Builds up a list of select statements for a collection of the entity being queried. This\n * includes the idProperty, any regular properties and any associations if this collection\n * is populated.\n * @ignore\n */\nfunction addCollectionSelects(coll, model, models) {\n  const collModel = models.find(m => m.mapId === coll.mapId);\n\n  let selects = collModel.properties.map(prop =>\n      helpers.createRenamedSelectStatement(coll.viewId, prop, coll.mapId)\n  );\n\n  selects.push(\n      helpers.createRenamedSelectStatement(coll.viewId, collModel.idProperty, coll.mapId)\n  );\n\n  if (coll.populate) {\n    selects = selects.concat(collModel.associations.map(collAssoc =>\n        helpers.createRenamedSelectStatement(coll.viewId, collAssoc.mapId, coll.mapId)\n    ));\n  }\n\n  return selects;\n}\n\n/**\n * Builds up a list of select statements for an association of the entity being queried. This\n * is just the Id from the original entity (eg the foreign key) if this association isn't\n * populated, or all properties if it is.\n * @ignore\n */\nfunction addAssociationSelects(assoc, model, models) {\n  if (!assoc.populate) {\n    // If an association is not populated, all we need is the regular column\n    // in the table\n    return [helpers.createSelectStatement(`${model.viewId}-core`, assoc.mapId)];\n  }\n\n  const assocModel = models.find(m => m.mapId === assoc.mapId);\n\n  // Get the property fields\n  let selects = assocModel.properties.map(prop =>\n      helpers.createRenamedSelectStatement(assoc.viewId, prop, assoc.mapId)\n  );\n  // Get the ID field\n  selects.push(\n      helpers.createRenamedSelectStatement(assoc.viewId, assocModel.idProperty, assoc.mapId)\n  );\n\n  // Get the fields for associations of the populated association\n  selects = selects.concat(assocModel.associations.map(assocAssoc =>\n      helpers.createRenamedSelectStatement(assoc.viewId, assocAssoc.mapId, assoc.mapId)\n  ));\n\n  return selects;\n}\n\n/**\n * Builds up a list of select statements for the entity being queried.\n * @ignore\n */\nfunction constructSelects(models, model) {\n  // Generate the select statements needed for the joins and result mapping\n  const idSelect = helpers.createSelectStatement(\n      `${model.viewId}-core`,\n      model.idProperty,\n      model.mapId\n  );\n\n  const propSelects = model.properties.map(prop =>\n      helpers.createSelectStatement(`${model.viewId}-core`, prop)\n  );\n\n  const assocSelects = model.associations.map(assoc =>\n      addAssociationSelects(assoc, model, models)\n  );\n\n  const collectionSelects = model.collections.map(coll =>\n      addCollectionSelects(coll, model, models)\n  );\n\n  const allSelects = [idSelect]\n      .concat(propSelects)\n      .concat(assocSelects)\n      .concat(collectionSelects);\n\n  // Flatten the arrays of select statements\n  return [].concat.apply([], allSelects);\n}\n\n/**\n * Generates a `core` subquery for the primary entity and applies any filters to it, including\n * limit, skip, sort and where clauses. By applying these filters to a subquery, the sorting\n * and pagination will behave as expected with the extra association and collection fields added\n * after.\n * @ignore\n */\nfunction constructSubQuery(qb, viewId, limit, skip, sortAttr, sortDir, whereClauses) {\n  qb = qb.select().from(viewId);\n  if (limit) {\n    qb = qb.limit(limit);\n  }\n  if (skip) {\n    qb = qb.offset(skip);\n  }\n  if (sortAttr && sortDir) {\n    qb = qb.orderBy(`${viewId}.${sortAttr}`, sortDir);\n  }\n\n  // Attach any where clauses we need\n  qb = helpers.applyWhereClauses(qb, whereClauses);\n\n  return qb;\n}\n\n/**\n * As the where clauses are validated when they are passed into the PreparedQuery\n * instance, we know that there will be exactly one value or list of values. We select\n * the relevant knex method depending on the input structure.\n * @ignore\n */\nfunction getMethodFromClause(clause) {\n  if (clause.value !== undefined) {\n    return 'where';\n  }\n  if (clause.values !== undefined) {\n    return 'whereIn';\n  }\n\n  // This is checked when clauses are supplied to the PreparedQuery instance\n  // so we should never get here\n  throw new Error('Must pass in value or values parameter for each clause');\n}\n\n\n/**\n * Creates an object with the information required to generate a knex where clause. The\n * object has the following keys:\n *\n * - method: 'where' or 'whereIn'\n * - params: A list of parameters to pass to the method (table.field, value(s))\n * - core: Bool indicating if it should be applied to the `core` subquery, or the outer query\n * @ignore\n */\nfunction preProcessWhereClause(clause, models, model) {\n\n  // Default to the the model itself\n  let viewId = model.viewId;\n  let core = true;\n\n  // If a model is specified, use its view (outside the core query)\n  if (clause.model) {\n    const altModel = models.find(m => m.mapId === clause.model);\n    if (!altModel) {\n      throw new Error(`Invalid modelId value supplied as part of where clause: ${clause}`);\n    }\n    viewId = altModel.viewId;\n    core = false;\n  }\n\n  let binding = clause.value;\n  if (binding === undefined) {\n    binding = clause.values;\n  }\n  return {\n    method: getMethodFromClause(clause),\n    params: [`${viewId}.${clause.key}`, binding],\n    core\n  };\n}\n\n\n/**\n * Contructs a knex object ready to extract the required info to feed into the mapper\n * for auto-populating collections/associations.\n * @ignore\n *\n * @param {JoinJsMap} models\n * @param {Object} model\n * @param {KnexInstance} knex\n * @param {Array} whereClauses - Array of where clauses\n * @param {String} sortAttr - The property to sort based on\n * @param {String} sortDir - asc/desc\n * @param {Int} limit - The max number of results to return\n * @param {Int} skip - The offset from the start of the result set\n */\nfunction constructQuery(models, model, knex, whereClauses, sortAttr, sortDir, limit, skip) {\n\n  const wClauses = whereClauses.map(clause => preProcessWhereClause(clause, models, model));\n  const coreWClauses = wClauses.filter(clause => clause.core);\n\n  let queryObj = knex\n\n      // Start with a subquery to apply the limit, skip and order-by\n      // on the primary entity for the query\n      .with(`${model.viewId}-core`, qb =>\n            constructSubQuery(qb, model.viewId, limit, skip, sortAttr, sortDir, coreWClauses))\n\n      .from(`${model.viewId}-core`);\n\n  // Add all the select statements required for the joins and the properties to\n  // be returned\n  queryObj = queryObj.select(constructSelects(models, model));\n\n  // Generate a list of params to be passed to leftJoin\n  const assocJoinParams = model.associations\n    .filter(assoc => assoc.populate)\n    .map(assoc => helpers.createAssociationJoinParameters(\n        `${model.viewId}-core`,\n        assoc.mapId,\n        assoc.viewId\n    ));\n\n  const collJoinParams = model.collections\n    .map(coll => helpers.createCollectionJoinParameters(\n        model.mapId,\n        `${model.viewId}-core`,\n        coll.mapId,\n        coll.viewId\n    ));\n\n\n  // Remove any null param sets\n  const joinParams = assocJoinParams.concat(collJoinParams).filter(p => !!p);\n\n  // Attach the join to the query Object\n  queryObj = helpers.attachJoins(queryObj, joinParams);\n\n  queryObj = helpers.applyWhereClauses(queryObj, wClauses.filter(clause => !clause.core));\n\n  if (sortAttr && sortDir) {\n    queryObj = queryObj.orderBy(`${model.viewId}-core.${sortAttr}`, sortDir);\n  }\n\n  return queryObj;\n}\n\nmodule.exports = constructQuery;\n\n// Export these for unit testing\nmodule.exports._addCollectionSelects = addCollectionSelects;\nmodule.exports._addAssociationSelects = addAssociationSelects;\nmodule.exports._constructSelects = constructSelects;\nmodule.exports._constructSubQuery = constructSubQuery;\n",
    "static": true,
    "longname": "lib/constructQuery.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 23,
    "kind": "variable",
    "name": "helpers",
    "memberof": "lib/constructQuery.js",
    "static": true,
    "longname": "lib/constructQuery.js~helpers",
    "access": null,
    "export": false,
    "importPath": "visions/lib/constructQuery.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 24,
    "kind": "function",
    "name": "addCollectionSelects",
    "memberof": "lib/constructQuery.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/constructQuery.js~addCollectionSelects",
    "access": null,
    "export": false,
    "importPath": "visions/lib/constructQuery.js",
    "importStyle": null,
    "description": "Builds up a list of select statements for a collection of the entity being queried. This\nincludes the idProperty, any regular properties and any associations if this collection\nis populated.",
    "lineNumber": 9,
    "ignore": true,
    "params": [
      {
        "name": "coll",
        "types": [
          "*"
        ]
      },
      {
        "name": "model",
        "types": [
          "*"
        ]
      },
      {
        "name": "models",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 25,
    "kind": "function",
    "name": "addAssociationSelects",
    "memberof": "lib/constructQuery.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/constructQuery.js~addAssociationSelects",
    "access": null,
    "export": false,
    "importPath": "visions/lib/constructQuery.js",
    "importStyle": null,
    "description": "Builds up a list of select statements for an association of the entity being queried. This\nis just the Id from the original entity (eg the foreign key) if this association isn't\npopulated, or all properties if it is.",
    "lineNumber": 35,
    "ignore": true,
    "params": [
      {
        "name": "assoc",
        "types": [
          "*"
        ]
      },
      {
        "name": "model",
        "types": [
          "*"
        ]
      },
      {
        "name": "models",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 26,
    "kind": "function",
    "name": "constructSelects",
    "memberof": "lib/constructQuery.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/constructQuery.js~constructSelects",
    "access": null,
    "export": false,
    "importPath": "visions/lib/constructQuery.js",
    "importStyle": null,
    "description": "Builds up a list of select statements for the entity being queried.",
    "lineNumber": 65,
    "ignore": true,
    "params": [
      {
        "name": "models",
        "types": [
          "*"
        ]
      },
      {
        "name": "model",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 27,
    "kind": "function",
    "name": "constructSubQuery",
    "memberof": "lib/constructQuery.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/constructQuery.js~constructSubQuery",
    "access": null,
    "export": false,
    "importPath": "visions/lib/constructQuery.js",
    "importStyle": null,
    "description": "Generates a `core` subquery for the primary entity and applies any filters to it, including\nlimit, skip, sort and where clauses. By applying these filters to a subquery, the sorting\nand pagination will behave as expected with the extra association and collection fields added\nafter.",
    "lineNumber": 101,
    "ignore": true,
    "params": [
      {
        "name": "qb",
        "types": [
          "*"
        ]
      },
      {
        "name": "viewId",
        "types": [
          "*"
        ]
      },
      {
        "name": "limit",
        "types": [
          "*"
        ]
      },
      {
        "name": "skip",
        "types": [
          "*"
        ]
      },
      {
        "name": "sortAttr",
        "types": [
          "*"
        ]
      },
      {
        "name": "sortDir",
        "types": [
          "*"
        ]
      },
      {
        "name": "whereClauses",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 28,
    "kind": "function",
    "name": "getMethodFromClause",
    "memberof": "lib/constructQuery.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/constructQuery.js~getMethodFromClause",
    "access": null,
    "export": false,
    "importPath": "visions/lib/constructQuery.js",
    "importStyle": null,
    "description": "As the where clauses are validated when they are passed into the PreparedQuery\ninstance, we know that there will be exactly one value or list of values. We select\nthe relevant knex method depending on the input structure.",
    "lineNumber": 125,
    "ignore": true,
    "params": [
      {
        "name": "clause",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 29,
    "kind": "function",
    "name": "preProcessWhereClause",
    "memberof": "lib/constructQuery.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/constructQuery.js~preProcessWhereClause",
    "access": null,
    "export": false,
    "importPath": "visions/lib/constructQuery.js",
    "importStyle": null,
    "description": "Creates an object with the information required to generate a knex where clause. The\nobject has the following keys:\n\n- method: 'where' or 'whereIn'\n- params: A list of parameters to pass to the method (table.field, value(s))\n- core: Bool indicating if it should be applied to the `core` subquery, or the outer query",
    "lineNumber": 148,
    "ignore": true,
    "params": [
      {
        "name": "clause",
        "types": [
          "*"
        ]
      },
      {
        "name": "models",
        "types": [
          "*"
        ]
      },
      {
        "name": "model",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"method\": *, \"params\": *, \"core\": *}"
      ]
    }
  },
  {
    "__docId__": 30,
    "kind": "function",
    "name": "constructQuery",
    "memberof": "lib/constructQuery.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/constructQuery.js~constructQuery",
    "access": null,
    "export": false,
    "importPath": "visions/lib/constructQuery.js",
    "importStyle": null,
    "description": "Contructs a knex object ready to extract the required info to feed into the mapper\nfor auto-populating collections/associations.",
    "lineNumber": 190,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "JoinJsMap"
        ],
        "spread": false,
        "optional": false,
        "name": "models",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "KnexInstance"
        ],
        "spread": false,
        "optional": false,
        "name": "knex",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "whereClauses",
        "description": "Array of where clauses"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "sortAttr",
        "description": "The property to sort based on"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "sortDir",
        "description": "asc/desc"
      },
      {
        "nullable": null,
        "types": [
          "Int"
        ],
        "spread": false,
        "optional": false,
        "name": "limit",
        "description": "The max number of results to return"
      },
      {
        "nullable": null,
        "types": [
          "Int"
        ],
        "spread": false,
        "optional": false,
        "name": "skip",
        "description": "The offset from the start of the result set"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 31,
    "kind": "file",
    "name": "lib/doJoins.js",
    "content": "const joinjs = require('join-js').default;\n\n/**\n * Makes the required adjustments to the models before passing it into join-js.\n * @ignore\n */\nmodule.exports = function doJoins(res, models, originalModel, modifiedModel) {\n\n  // Manipulate the models being passed into join-js to un-populate the collections/associations of\n  // associations/collections\n  models = models.map(model => {\n\n    // Update the models of the entities that are being joined into the current query. They need to\n    // not include any joins of their own, instead the keys they are joined on are moved to basic\n    // properties\n    const assocFound = originalModel.associations.find(assoc => assoc.mapId === model.mapId);\n    const collFound = originalModel.collections.find(coll => coll.mapId === model.mapId);\n    if (collFound || assocFound) {\n      model.properties = model.properties.concat(\n          model.associations.map(assoc => assoc.mapId)\n      );\n      model.associations = [];\n\n      // Collections are removed entirely as we dont want 2 levels of nesting\n      model.collections = [];\n    }\n\n    // Keep the un-populated associations as properties for the purposes of join-js\n    if (model.mapId === originalModel.mapId) {\n      model.properties = model.properties.concat(\n          modifiedModel.associations.filter(a => !a.populate).map(a => a.mapId)\n      );\n      model.associations = modifiedModel.associations.filter(a => a.populate);\n    }\n    return model;\n  });\n\n  // Do the populating\n  let joined = joinjs.map(res, models, originalModel.mapId);\n\n  // Simplify the collections that shouldnt be populated\n  modifiedModel.collections.forEach(coll => {\n    if (!coll.populate) {\n      joined = joined.map(nested => {\n        nested[coll.name] = nested[coll.name].map(c => c.id);\n        return nested;\n      });\n    }\n  });\n\n  return joined;\n};\n",
    "static": true,
    "longname": "lib/doJoins.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 32,
    "kind": "variable",
    "name": "joinjs",
    "memberof": "lib/doJoins.js",
    "static": true,
    "longname": "lib/doJoins.js~joinjs",
    "access": null,
    "export": false,
    "importPath": "visions/lib/doJoins.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 33,
    "kind": "function",
    "name": "exports",
    "memberof": "lib/doJoins.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/doJoins.js~exports",
    "access": null,
    "export": false,
    "importPath": "visions/lib/doJoins.js",
    "importStyle": null,
    "description": "Makes the required adjustments to the models before passing it into join-js.",
    "lineNumber": 7,
    "ignore": true,
    "params": [
      {
        "name": "res",
        "types": [
          "*"
        ]
      },
      {
        "name": "models",
        "types": [
          "*"
        ]
      },
      {
        "name": "originalModel",
        "types": [
          "*"
        ]
      },
      {
        "name": "modifiedModel",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 34,
    "kind": "file",
    "name": "lib/helpers.js",
    "content": "\n/**\n * Helper function to generate select strings.\n * @ignore\n */\nconst createRenamedSelectStatement = (view, attr, table) => `${view}.${attr} as ${table}_${attr}`;\n\n/**\n * Helper function to generate select strings.\n * @ignore\n */\nconst createSelectStatement = (view, attr) => `${view}.${attr} as ${attr}`;\n\n/**\n * Helper function to generate the params to leftJoin needed for an association.\n * @ignore\n */\nconst createAssociationJoinParameters =\n    (identityView, join, joinView) => [joinView, `${joinView}.id`, `${identityView}.${join}`];\n\n/**\n * Helper function to generate the params to leftJoin needed for a collection.\n * @ignore\n */\nconst createCollectionJoinParameters = (identity, identityView, join, joinView) =>\n    [joinView, `${identityView}.id`, `${joinView}.${identity}`];\n\n/**\n * Applies all the sets of leftJoin parameters to the knex object.\n * @ignore\n */\nconst attachJoins = (queryObj, joinParams) =>\n    joinParams.reduce(\n        // This works as leftJoin returns the knex object again (chaining)\n        (qo, params) => qo.leftJoin.apply(qo, params),\n        queryObj\n    );\n\n/**\n * Applies all the sets of leftJoin parameters to the knex object.\n * @ignore\n */\nconst applyWhereClauses = (queryObj, whereClauses) =>\n    whereClauses.reduce(\n        // This works as where and whereIn return the knex object again (chaining)\n        (qo, clause) => qo[clause.method].apply(qo, clause.params),\n        queryObj\n    );\n\nmodule.exports = {\n  attachJoins,\n  applyWhereClauses,\n  createAssociationJoinParameters,\n  createCollectionJoinParameters,\n  createRenamedSelectStatement,\n  createSelectStatement\n};\n",
    "static": true,
    "longname": "lib/helpers.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 35,
    "kind": "function",
    "name": "createRenamedSelectStatement",
    "memberof": "lib/helpers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/helpers.js~createRenamedSelectStatement",
    "access": null,
    "export": false,
    "importPath": "visions/lib/helpers.js",
    "importStyle": null,
    "description": "Helper function to generate select strings.",
    "lineNumber": 6,
    "ignore": true,
    "params": [
      {
        "name": "view",
        "types": [
          "*"
        ]
      },
      {
        "name": "attr",
        "types": [
          "*"
        ]
      },
      {
        "name": "table",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 36,
    "kind": "function",
    "name": "createSelectStatement",
    "memberof": "lib/helpers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/helpers.js~createSelectStatement",
    "access": null,
    "export": false,
    "importPath": "visions/lib/helpers.js",
    "importStyle": null,
    "description": "Helper function to generate select strings.",
    "lineNumber": 12,
    "ignore": true,
    "params": [
      {
        "name": "view",
        "types": [
          "*"
        ]
      },
      {
        "name": "attr",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 37,
    "kind": "function",
    "name": "createAssociationJoinParameters",
    "memberof": "lib/helpers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/helpers.js~createAssociationJoinParameters",
    "access": null,
    "export": false,
    "importPath": "visions/lib/helpers.js",
    "importStyle": null,
    "description": "Helper function to generate the params to leftJoin needed for an association.",
    "lineNumber": 19,
    "ignore": true,
    "params": [
      {
        "name": "identityView",
        "types": [
          "*"
        ]
      },
      {
        "name": "join",
        "types": [
          "*"
        ]
      },
      {
        "name": "joinView",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 38,
    "kind": "function",
    "name": "createCollectionJoinParameters",
    "memberof": "lib/helpers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/helpers.js~createCollectionJoinParameters",
    "access": null,
    "export": false,
    "importPath": "visions/lib/helpers.js",
    "importStyle": null,
    "description": "Helper function to generate the params to leftJoin needed for a collection.",
    "lineNumber": 25,
    "ignore": true,
    "params": [
      {
        "name": "identity",
        "types": [
          "*"
        ]
      },
      {
        "name": "identityView",
        "types": [
          "*"
        ]
      },
      {
        "name": "join",
        "types": [
          "*"
        ]
      },
      {
        "name": "joinView",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 39,
    "kind": "function",
    "name": "attachJoins",
    "memberof": "lib/helpers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/helpers.js~attachJoins",
    "access": null,
    "export": false,
    "importPath": "visions/lib/helpers.js",
    "importStyle": null,
    "description": "Applies all the sets of leftJoin parameters to the knex object.",
    "lineNumber": 32,
    "ignore": true,
    "params": [
      {
        "name": "queryObj",
        "types": [
          "*"
        ]
      },
      {
        "name": "joinParams",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 40,
    "kind": "function",
    "name": "applyWhereClauses",
    "memberof": "lib/helpers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/helpers.js~applyWhereClauses",
    "access": null,
    "export": false,
    "importPath": "visions/lib/helpers.js",
    "importStyle": null,
    "description": "Applies all the sets of leftJoin parameters to the knex object.",
    "lineNumber": 43,
    "ignore": true,
    "params": [
      {
        "name": "queryObj",
        "types": [
          "*"
        ]
      },
      {
        "name": "whereClauses",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 41,
    "kind": "file",
    "name": "lib/index.js",
    "content": "const PreparedQuery = require('./PreparedQuery');\nconst preProcessModels = require('./preProcessModels');\n\n/**\n * Factory class for generating queries for a set of views that are \"overlayed\"\n * over the model schema.\n */\nclass Visions {\n  /**\n   * @param {JoinJsMap} models - The complete schema of the database (using joinjs structure)\n   * @param {KnexInstance} knex - A knex instance, configured for access to the database\n   * @param {Object} views - A mapping from modelId to view\n   */\n  constructor(models, knex, views) {\n    this.knex = knex;\n    this.models = models;\n    this.processedModels = preProcessModels(this.models, views);\n  }\n\n  /**\n   * Creates a query object for the chosen model.\n   *\n   * @param {String} modelId - The model to query\n   */\n  generateQueryFor(modelId) {\n    return new PreparedQuery(modelId, this.processedModels, this.knex);\n  }\n\n  /**\n   * Returns the name of the view for the model. Used for constructing queries\n   * directly with knex when they are beyond the scope of this wrapper to generate\n   * effectively.\n   *\n   * @param {String} modelId - The modelId of the requested view name\n   */\n  getViewNameFor(modelId) {\n    const model = this.processedModels.find(m => m.mapId === modelId);\n    if (!model) {\n      throw new Error(`Invalid modelId: ${modelId}`);\n    }\n    return model.viewId;\n  }\n}\n\nmodule.exports = Visions;\n",
    "static": true,
    "longname": "lib/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 42,
    "kind": "variable",
    "name": "PreparedQuery",
    "memberof": "lib/index.js",
    "static": true,
    "longname": "lib/index.js~PreparedQuery",
    "access": null,
    "export": false,
    "importPath": "visions",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 43,
    "kind": "variable",
    "name": "preProcessModels",
    "memberof": "lib/index.js",
    "static": true,
    "longname": "lib/index.js~preProcessModels",
    "access": null,
    "export": false,
    "importPath": "visions",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 44,
    "kind": "class",
    "name": "Visions",
    "memberof": "lib/index.js",
    "static": true,
    "longname": "lib/index.js~Visions",
    "access": null,
    "export": false,
    "importPath": "visions",
    "importStyle": null,
    "description": "Factory class for generating queries for a set of views that are \"overlayed\"\nover the model schema.",
    "lineNumber": 8,
    "interface": false
  },
  {
    "__docId__": 45,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/index.js~Visions",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/index.js~Visions#constructor",
    "access": null,
    "description": "",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "JoinJsMap"
        ],
        "spread": false,
        "optional": false,
        "name": "models",
        "description": "The complete schema of the database (using joinjs structure)"
      },
      {
        "nullable": null,
        "types": [
          "KnexInstance"
        ],
        "spread": false,
        "optional": false,
        "name": "knex",
        "description": "A knex instance, configured for access to the database"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "views",
        "description": "A mapping from modelId to view"
      }
    ]
  },
  {
    "__docId__": 46,
    "kind": "member",
    "name": "knex",
    "memberof": "lib/index.js~Visions",
    "static": false,
    "longname": "lib/index.js~Visions#knex",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 47,
    "kind": "member",
    "name": "models",
    "memberof": "lib/index.js~Visions",
    "static": false,
    "longname": "lib/index.js~Visions#models",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 48,
    "kind": "member",
    "name": "processedModels",
    "memberof": "lib/index.js~Visions",
    "static": false,
    "longname": "lib/index.js~Visions#processedModels",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 49,
    "kind": "method",
    "name": "generateQueryFor",
    "memberof": "lib/index.js~Visions",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/index.js~Visions#generateQueryFor",
    "access": null,
    "description": "Creates a query object for the chosen model.",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "modelId",
        "description": "The model to query"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "method",
    "name": "getViewNameFor",
    "memberof": "lib/index.js~Visions",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/index.js~Visions#getViewNameFor",
    "access": null,
    "description": "Returns the name of the view for the model. Used for constructing queries\ndirectly with knex when they are beyond the scope of this wrapper to generate\neffectively.",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "modelId",
        "description": "The modelId of the requested view name"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 51,
    "kind": "file",
    "name": "lib/preProcessModels.js",
    "content": "/**\n * Process models to ensure that all the viewId properties are valid.\n * @ignore\n *\n * @param {JoinJsMap} models\n * @param {Object} views\n */\nmodule.exports = function preProcessModels(models, views) {\n  return models.map(model => {\n    const output = {\n      mapId: model.mapId,\n      viewId: views[model.mapId] || model.mapId,\n      idProperty: model.idProperty,\n      properties: model.properties\n    };\n\n    output.associations = (model.associations || []).map(assoc => ({\n      name: assoc.name,\n      mapId: assoc.mapId,\n      idProperty: model.idProperty,\n      viewId: views[assoc.mapId] || assoc.mapId,\n      columnPrefix: `${assoc.mapId}_`\n    }));\n\n    output.collections = (model.collections || []).map(coll => ({\n      name: coll.name,\n      mapId: coll.mapId,\n      idProperty: model.idProperty,\n      viewId: views[coll.mapId] || coll.mapId,\n      columnPrefix: `${coll.mapId}_`\n    }));\n    return output;\n  });\n};\n",
    "static": true,
    "longname": "lib/preProcessModels.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 52,
    "kind": "function",
    "name": "exports",
    "memberof": "lib/preProcessModels.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/preProcessModels.js~exports",
    "access": null,
    "export": false,
    "importPath": "visions/lib/preProcessModels.js",
    "importStyle": null,
    "description": "Process models to ensure that all the viewId properties are valid.",
    "lineNumber": 8,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "JoinJsMap"
        ],
        "spread": false,
        "optional": false,
        "name": "models",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "views",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 55,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 56,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 57,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 58,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 59,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 60,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 61,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 62,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 63,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 64,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 65,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 66,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 67,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 68,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 69,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 70,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 71,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 72,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 73,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 74,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 75,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 76,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 77,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 78,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 79,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 80,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 81,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 82,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 83,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 84,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 85,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 86,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 87,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 88,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 89,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 90,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 91,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 92,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 93,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 94,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 95,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 96,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 97,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 98,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 99,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 100,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "lineNumber": 193,
    "builtinExternal": true
  },
  {
    "__docId__": 102,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 103,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 104,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 105,
    "kind": "external",
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 106,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 107,
    "kind": "external",
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 108,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 109,
    "kind": "external",
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "builtinExternal": true
  }
]